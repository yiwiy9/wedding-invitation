openapi: 3.0.2
info:
  title: Wedding Invitation API
  version: 1.0.0
paths:
  /tests:
    get:
      operationId: getTests
      summary: テスト：メッセージの一覧を取得
      tags:
        - Test
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test'
    post:
      operationId: postTests
      summary: テスト：新規メッセージの作成
      tags:
        - Test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
  /users:
    post:
      operationId: postUsers
      summary: 新規ユーザーの作成
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userEmail}:
    get:
      operationId: getUserByEmail
      summary: 指定したメールアドレスのユーザーを取得
      tags:
        - User
      parameters:
        - name: userEmail
          description: メールアドレス
          in: path
          required: true
          schema:
            type: string
            format: email
            example: wedding@example.com
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    Test:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          example: wedding@example.com
    User:
      type: object
      required:
        - email
        - name
      properties:
        email:
          type: string
          format: email
          example: wedding@example.com
        name:
          type: string
          example: Wedding Taro
