openapi: 3.0.2
info:
  title: Wedding Invitation API
  version: 1.0.0
paths:
  /users:
    post:
      operationId: postUser
      summary: 新規ユーザーの作成
      tags:
        - User
      requestBody:
        $ref: '#/components/requestBodies/PostUser'
      responses:
        '201':
          $ref: '#/components/responses/User'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UserValidationError'
  /tests:
    get:
      operationId: getTests
      summary: テスト：メールの一覧を取得
      tags:
        - Test
      responses:
        '200':
          $ref: '#/components/responses/Tests'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: postTest
      summary: テスト：新規メールの作成
      tags:
        - Test
      requestBody:
        $ref: '#/components/requestBodies/PostTest'
      responses:
        '201':
          $ref: '#/components/responses/Test'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/TestValidationError'
components:
  requestBodies:
    PostUser:
      description: 新規ユーザーの作成用リクエストボディ
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    PostTest:
      description: テスト：新規メールの作成用リクエストボディ
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Test'
  responses:
    User:
      description: 単一ユーザーのレスポンスボディ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    UserValidationError:
      description: ユーザーバリデーションエラーのレスポンスボディ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserValidationError'
    Test:
      description: 単一テストのレスポンスボディ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Test'
    Tests:
      description: 複数テストのレスポンスボディ
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Test'
    TestValidationError:
      description: テストバリデーションエラーのレスポンスボディ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TestValidationError'
    NotFound:
      description: 共通の404エラーレスポンスボディ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseError'
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          example: wedding@example.com
        name:
          type: string
          example: Wedding Man
      required:
        - email
        - name
    UserValidationError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: email is invalid.
                name:
                  type: string
                  example: name is invalid.
          required:
            - errors
    Test:
      type: object
      properties:
        email:
          type: string
          format: email
          example: wedding@example.com
      required:
        - email
    TestValidationError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: email is invalid.
          required:
            - errors
    BaseError:
      type: object
      properties:
        message:
          type: string
          example: An error occurred.
      required:
        - message
