service: ${self:custom.appName}
frameworkVersion: '3'

useDotenv: true

plugins:
  - serverless-domain-manager
  - serverless-offline
  - serverless-plugin-typescript
  - serverless-s3-sync

custom:
  appName: wedding-invitation-app
  defaultStage: dev

  deletionPolicy:
    dev: Delete
    prod: Delete #Retain

  backendFQDN:
    dev: dev-api-wedding.${env:APP_DOMAIN_NAME}
    prod: api-wedding.${env:APP_DOMAIN_NAME}

  frontendFQDN:
    dev: dev-wedding.${env:APP_DOMAIN_NAME}
    prod: wedding.${env:APP_DOMAIN_NAME}

  # serverless-domain-manager
  customDomain:
    domainName: ${self:custom.backendFQDN.${self:provider.stage}}
    stage: ${self:provider.stage}
    basePath: ''
    createRoute53Record: true
    createRoute53IPv6Record: true
    endpointType: REGIONAL
    securityPolicy: tls_1_2
    apiType: http
    autoDomain: true

  # serverless-s3-sync
  s3Sync:
    # `bucketName: !Ref S3Bucket`だと変数展開されず、上手くいかないのでスタックの出力を参照する
    - bucketNameKey: BucketNameOutputKey
      localDir: frontend/build

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, self:custom.defaultStage}
  region: ap-northeast-1
  architecture: arm64
  memorySize: 128
  timeout: 6
  versionFunctions: false
  environment:
    NODE_OPTIONS: --enable-source-maps # ソースマップを有効にする

package:
  patterns:
    - '!frontend/**' # フロントエンドのコードはLambda関数に含めない

functions:
  hello:
    handler: backend/handler.hello
    events:
      - httpApi:
          path: /
          method: get

resources:
  - ${file(./resources/bucket.yml)}
  - ${file(./resources/oac.yml)}
  - ${file(./resources/distribution.yml)}
  - ${file(./resources/domain.yml)}
